# -*- coding: utf-8 -*-
"""MLday1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o8HF1LlH4Pn0VE_h7FuV2d2Br9PrIRjz
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
#from google.colab import files
#uploaded=files.upload()
df=pd.read_csv("/content/sample_data/Project Management Dataset.csv");
#print(df.head())
#print(df.tail())
#print(df.dtypes)
#print(df.isnull().sum())
print(df.describe())

sns.histplot(data=df,x=' Project Cost ',y='Project Name',kde=True,hue='Project Type')
plt.show()

sns.countplot(data=df,x='Project Type')
plt.xticks(rotation =40)
plt.title("project count by type")
plt.show()

sns.barplot(data=df,x='Department',y=' Project Cost ',estimator=np.mean)

plt.xticks(rotation =40)
plt.yticks(rotation =40)
plt.title("Average cost by department")

plt.show()

plt.pie(df['Status'].value_counts(),labels=df['Status'].value_counts().index,autopct='%1.2f%%')
plt.title("project Status Distribution")
plt.show()

num=df.select_dtypes(include='number')
cor=num.corr()
sns.heatmap(cor,annot=True,cmap='coolwarm')
plt.title('correlation heatmap')
plt.show()

sns.boxplot(data=df,x='Complexity',y='Completion%',showfliers=True)
plt.title('project completion% by complexity')
plt.show()

df['Year-Month']=df['Year'].astype(str)+'-'+df['Month'].astype(str)
df[' Project Cost '] = df[' Project Cost '].str.replace(',', '').astype(float)

df.groupby('Year-Month')[' Project Cost '].sum().plot()
plt.xticks(rotation =40)

plt.title("Monthly project costs over time")

plt.show()

sns.scatterplot(data=df,x=' Project Cost ',y=' Project Benefit ')
plt.title("project cost vs Benefit")
plt.show()

# prompt: 3d chart :cost benefit and complexity

import plotly.express as px

fig = px.scatter_3d(df, x=' Project Cost ', y=' Project Benefit ', z='Complexity',
                  color='Project Type')
fig.update_layout(scene = dict(
                    xaxis = dict(title  = 'Project Cost'),
                    yaxis = dict(title  = 'Project Benefit'),
                    zaxis = dict(title  = 'Complexity')))
fig.show()

#data[' Project Benefit '] = data[' Project Benefit '].str.replace(',', '').astype(float)
complexity_mapping = {'low': 1, 'medium': 2, 'high': 3}
df['Complexity'] = df['Complexity'].map(complexity_mapping)
# Create the 3D scatter plot
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.scatter(df[' Project Cost '], df[' Project Benefit '], df['Complexity'])
ax.set_xlabel('Project Cost')
ax.set_ylabel('Project Benefit')
ax.set_zlabel('Complexity')
plt.title("3D Chart of Cost, Benefit, and Complexity")
plt.show()

df[' Project Cost '] = df[' Project Cost '].str.replace(',', '').astype(float)