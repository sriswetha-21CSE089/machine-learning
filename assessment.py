# -*- coding: utf-8 -*-
"""assessment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/192VEEgFEsSC4rvpdgb3v3x_9LiN_Vyq9
"""

import pandas as pd

# Load the dataset
df = pd.read_csv('/content/sample_data/samplebankloandata.csv')

# Print the first few rows of the dataset
print(df.head())

# Get the shape of the dataset
print("Shape of the dataset:", df.shape)

# Get the data types of each column
print("Data types of each column:", df.dtypes)

# Get the summary statistics of the dataset
print("Summary statistics of the dataset:", df.describe())


print("Missing values:", df.isnull().sum())


print("Duplicates:", df.duplicated().sum())

import matplotlib.pyplot as plt
plt.hist(df['loan_amount'])
plt.xlabel('loan_amount')
plt.ylabel('Frequency')
plt.title('Distribution of Loan amount')
plt.show()

import seaborn as sns
numerical_df = df.select_dtypes(include=['int64', 'float64'])

# Calculate the correlation matrix
correlation_matrix = numerical_df.corr()
plt.figure(figsize=(12, 10))
sns.heatmap(correlation_matrix, cmap='coolwarm', vmin=-1, vmax=1)
plt.title('Correlation Heatmap of Numerical Variables')
plt.show()

# Scatter plot
plt.scatter(df['loan_amount'], df['purpose'])
plt.xlabel('Loan Amount')
plt.ylabel('Interest Rate')
plt.title('Scatter Plot of Loan Amount vs purpose')
plt.show()

# Box plot
plt.boxplot(df['loan_amount'])
plt.xlabel('Loan Amount')
plt.title('Box Plot of Loan Amount')
plt.show()

plt.figure(figsize=(10, 10))
purpose_counts = df['purpose'].value_counts()
plt.pie(purpose_counts, labels=purpose_counts.index, autopct='%1.1f%%', startangle=200)
plt.title('Pie Chart: Distribution of Loan Purposes')
plt.axis('equal')
plt.show()

# Bar plot for efficient attributes
df['loan_condition'].value_counts().plot(kind='bar')
plt.xlabel('loan_condition')
plt.ylabel('Count')
plt.title('Distribution of loan condition')
plt.show()

import pandas as pd
import plotly.express
fig = px.scatter_3d(df, x='loan_amount', y='interest_rate', z='annual_inc',
                    color='purpose', opacity=0.7,
                    size_max=10, hover_name='id')

fig.update_layout(scene=dict(
                    xaxis_title='Loan Amount',
                    yaxis_title='Interest Rate',
                    zaxis_title='Annual Income'))
fig.show()